name: tms
description: tms project.

publish_to: 'none'

version: 1.0.0+1

environment:
  sdk: '>=2.18.2 <3.0.0'

dependencies:
  flutter:
    sdk: flutter

  carousel_slider: ^4.1.1
  cupertino_icons: ^1.0.2
  dropdown_button2: ^1.6.2
  expandable: ^5.0.1
  firebase_core: ^2.1.1
  firebase_messaging: ^14.0.3
  flutter_easyloading: ^3.0.5
  flutter_launcher_icons: ^0.10.0
  flutter_local_notifications: ^12.0.3
  flutter_native_splash: ^2.2.3+1
  get: ^4.6.5
  http: ^0.13.5
  image: ^3.1.1
  image_cropper: ^3.0.0
  image_picker: ^0.8.5+3
  image_picker_android: ^0.8.5+3
  intl: ^0.17.0
  logger: ^1.1.0
  mask_text_input_formatter: ^2.0.0
  permission_handler: ^10.2.0
  uni_links: ^0.5.1
  url_launcher: ^6.1.3
  webview_flutter: ^3.0.0

dev_dependencies:
  flutter_test:
    sdk: flutter

  flutter_lints: ^2.0.0

flutter:
  uses-material-design: true

  assets:
    - assets/icons/
    - assets/images/
    - assets/lotties/

flutter_native_splash:
  # Customize the parameters below, and run the following command in the terminal:
  # flutter pub run flutter_native_splash:create
  # To restore Flutter's default white splash screen, run the following command in the terminal:
  # flutter pub run flutter_native_splash:remove

  color: "#ffffff"
  #background_image: "assets/background.png"
  #image: assets/splash.png
  #branding: assets/dart.png
  #branding_mode: bottom

  #color_dark: "#042a49"
  #background_image_dark: "assets/dark-background.png"
  #image_dark: assets/splash-invert.png
  #branding_dark: assets/dart_dark.png

  android_12:
    #image: assets/android12splash.png
    #color: "#42a5f5"
    #icon_background_color: "#111111"
    #branding: assets/dart.png
    #image_dark: assets/android12splash-invert.png
    #color_dark: "#042a49"
    #icon_background_color_dark: "#eeeeee"

  # The android, ios and web parameters can be used to disable generating a splash screen on a given platform.
  #android: false
  #ios: false
  #web: false

  # android_gravity can be one of the following Android Gravity (see
  # https://developer.android.com/reference/android/view/Gravity): bottom, center,
  # center_horizontal, center_vertical, clip_horizontal, clip_vertical, end, fill, fill_horizontal,
  # fill_vertical, left, right, start, or top.
  android_gravity: center
  #
  # ios_content_mode can be one of the following iOS UIView.ContentMode (see
  # https://developer.apple.com/documentation/uikit/uiview/contentmode): scaleToFill,
  # scaleAspectFit, scaleAspectFill, center, top, bottom, left, right, topLeft, topRight,
  # bottomLeft, or bottomRight.
  ios_content_mode: center
